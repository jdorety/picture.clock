import unicornhat as unicorn
import time
import datetime


moon = [[(0, 0, 132), (0, 0, 132), (0, 0, 132), (0, 0, 132), (0, 0, 132), (0, 0, 132), (0, 0, 132), (0, 0, 132)],
          [(0, 0, 132), (0, 0, 132), (132, 132, 0), (132, 132, 0), (132, 132, 0), (0, 0, 132), (0, 0, 132), (0, 0, 132)],
          [(0, 0, 132), (0, 0, 132), (0, 0, 132), (132, 132, 0), (132, 132, 0), (132, 132, 0), (0, 0, 132), (0, 0, 132)],
          [(0, 0, 132), (0, 0, 132), (0, 0, 132), (0, 0, 132), (132, 132, 0), (132, 132, 0), (132, 132, 0), (0, 0, 132)],
          [(0, 0, 132), (0, 0, 132), (0, 0, 132), (0, 0, 132), (132, 132, 0), (132, 132, 0), (132, 132, 0), (0, 0, 132)],
          [(0, 0, 132), (0, 0, 132), (0, 0, 132), (132, 132, 0), (132, 132, 0), (132, 132, 0), (0, 0, 132), (0, 0, 132)],
          [(0, 0, 132), (0, 0, 132), (132, 132, 0), (132, 132, 0), (132, 132, 0), (0, 0, 132), (0, 0, 132), (0, 0, 132)],
          [(0, 0, 132), (0, 0, 132), (0, 0, 132), (0, 0, 132), (0, 0, 132), (0, 0, 132), (0, 0, 132), (0, 0, 132)]]

sun = [[(255, 255, 0), (0, 132, 132), (0, 132, 132), (255, 255, 0), (0, 132, 132), (0, 132, 132), (0, 132, 132), (255, 255, 0)], [(0, 132, 132), (255, 255, 0), (0, 132, 132), (0, 132, 132), (0, 132, 132), (0, 132, 132), (255, 255, 0), (0, 132, 132)], [(0, 132, 132), (0, 132, 132), (0, 132, 132), (255, 177, 0), (255, 177, 0), (0, 132, 132), (0, 132, 132), (0, 132, 132)], [(0, 132, 132), (0, 132, 132), (255, 177, 0), (255, 255, 0), (255, 255, 0), (255, 177, 0), (0, 132, 132), (255, 255, 0)], [(255, 255, 0), (0, 132, 132), (255, 177, 0), (255, 255, 0), (255, 255, 0), (255, 177, 0), (0, 132, 132), (0, 132, 132)], [(0, 132, 132), (0, 132, 132), (0, 132, 132), (255, 177, 0), (255, 177, 0), (0, 132, 132), (0, 132, 132), (0, 132, 132)], [(0, 132, 132), (255, 255, 0), (0, 132, 132), (0, 132, 132), (0, 132, 132), (0, 132, 132), (255, 255, 0), (0, 132, 132)], [(255, 255, 0), (0, 132, 132), (0, 132, 132), (0, 132, 132), (255, 255, 0), (0, 132, 132), (0, 132, 132), (255, 255, 0)]]

st_paddys = [[(0, 0, 0), (23, 233, 23), (23, 233, 23), (0, 0, 0), (0, 0, 0), (23, 233, 23), (23, 233, 23), (0, 0, 0)], [(23, 233, 23), (23, 233, 23), (23, 233, 23), (0, 0, 0), (0, 0, 0), (23, 233, 23), (23, 233, 23), (23, 233, 23)], [(23, 233, 23), (23, 233, 23), (23, 233, 23), (0, 0, 0), (0, 0, 0), (23, 233, 23), (23, 233, 23), (23, 233, 23)], [(0, 0, 0), (0, 0, 0), (0, 0, 0), (23, 233, 23), (23, 233, 23), (0, 0, 0), (0, 0, 0), (0, 0, 0)], [(0, 0, 0), (0, 0, 0), (0, 0, 0), (23, 233, 23), (23, 233, 23), (0, 0, 0), (0, 0, 0), (0, 0, 0)], [(23, 233, 23), (23, 233, 23), (23, 233, 23), (0, 0, 0), (0, 0, 0), (23, 233, 23), (23, 233, 23), (23, 233, 23)], [(23, 233, 23), (23, 233, 23), (23, 233, 23), (0, 0, 0), (0, 0, 0), (23, 233, 23), (23, 233, 23), (23, 233, 23)], [(0, 0, 0), (23, 233, 23), (23, 233, 23), (0, 0, 0), (0, 0, 0), (23, 233, 23), (23, 233, 23), (0, 0, 0)]]

birthday = [[(0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0)], [(0, 0, 0), (255, 162, 33), (0, 0, 0), (255, 162, 33), (0, 0, 0), (255, 162, 33), (0, 0, 0), (255, 162, 33)], [(0, 0, 0), (255, 0, 0), (0, 0, 0), (255, 26, 81), (0, 0, 0), (255, 26, 81), (0, 0, 0), (255, 26, 81)], [(0, 0, 0), (255, 0, 0), (0, 0, 0), (255, 26, 81), (0, 0, 0), (255, 26, 81), (0, 0, 0), (255, 26, 81)], [(255, 255, 255), (255, 255, 255), (33, 113, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255)], [(101, 255, 33), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (137, 0, 255), (255, 255, 255), (255, 33, 138)], [(255, 255, 255), (255, 255, 255), (255, 255, 255), (0, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255)], [(255, 255, 255), (255, 0, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 255), (255, 255, 0), (255, 255, 255)]]

globe = [[(0, 0, 0), (0, 0, 0), (2, 2, 255), (0, 132, 0), (0, 132, 0), (2, 2, 255), (0, 0, 0), (0, 0, 0)], [(0, 0, 0), (0, 132, 0), (2, 2, 255), (0, 132, 0), (2, 2, 255), (0, 132, 0), (0, 132, 0), (0, 0, 0)], [(0, 132, 0), (0, 132, 0), (2, 2, 255), (2, 2, 255), (2, 2, 255), (0, 132, 0), (0, 132, 0), (0, 132, 0)], [(2, 2, 255), (0, 132, 0), (0, 132, 0), (2, 2, 255), (2, 2, 255), (2, 2, 255), (2, 2, 255), (2, 2, 255)], [(2, 2, 255), (0, 132, 0), (0, 132, 0), (0, 132, 0), (2, 2, 255), (0, 132, 0), (0, 132, 0), (0, 132, 0)], [(2, 2, 255), (0, 132, 0), (0, 132, 0), (0, 132, 0), (2, 2, 255), (0, 132, 0), (0, 132, 0), (0, 132, 0)], [(0, 0, 0), (0, 132, 0), (2, 2, 255), (2, 2, 255), (2, 2, 255), (2, 2, 255), (0, 132, 0), (0, 0, 0)], [(0, 0, 0), (0, 0, 0), (2, 2, 255), (0, 132, 0), (2, 2, 255), (2, 2, 255), (0, 0, 0), (0, 0, 0)]]

christmas_tree = [[(0, 0, 0), (0, 0, 0), (0, 0, 0), (255, 255, 0), (255, 255, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0)], [(0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 205, 0), (0, 205, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0)], [(0, 0, 0), (0, 0, 0), (0, 205, 0), (156, 0, 255), (0, 205, 0), (0, 205, 0), (0, 0, 0), (0, 0, 0)], [(0, 0, 0), (0, 205, 0), (0, 205, 0), (0, 205, 0), (0, 205, 0), (0, 221, 212), (0, 205, 0), (0, 0, 0)], [(0, 0, 0), (0, 205, 0), (0, 205, 0), (0, 205, 0), (0, 205, 0), (0, 205, 0), (0, 205, 0), (0, 0, 0)], [(0, 205, 0), (255, 0, 0), (0, 205, 0), (0, 205, 0), (255, 174, 0), (0, 205, 0), (0, 205, 0), (0, 205, 0)], [(0, 205, 0), (0, 205, 0), (0, 0, 255), (0, 205, 0), (0, 205, 0), (0, 205, 0), (255, 0, 255), (0, 205, 0)], [(0, 0, 0), (0, 0, 0), (0, 0, 0), (206, 151, 19), (206, 151, 19), (0, 0, 0), (0, 0, 0), (0, 0, 0)]]

valentines = [[(0, 0, 0), (255, 0, 174), (0, 0, 0), (0, 0, 0), (0, 0, 0), (255, 0, 174), (0, 0, 0), (0, 0, 0)], [(255, 0, 174), (255, 0, 174), (255, 0, 174), (0, 0, 0), (255, 0, 174), (255, 0, 174), (255, 0, 174), (0, 0, 0)], [(255, 0, 174), (255, 132, 237), (255, 132, 237), (255, 0, 174), (255, 132, 237), (255, 132, 237), (255, 0, 174), (0, 0, 0)], [(255, 0, 174), (255, 132, 237), (255, 89, 157), (255, 132, 237), (255, 89, 157), (255, 132, 237), (255, 0, 174), (0, 0, 0)], [(255, 0, 174), (255, 132, 237), (255, 89, 157), (255, 89, 157), (255, 89, 157), (255, 132, 237), (255, 0, 174), (0, 0, 0)], [(0, 0, 0), (255, 0, 174), (255, 132, 237), (255, 89, 157), (255, 132, 237), (255, 0, 174), (0, 0, 0), (0, 0, 0)], [(0, 0, 0), (0, 0, 0), (255, 0, 174), (255, 132, 237), (255, 0, 174), (0, 0, 0), (0, 0, 0), (0, 0, 0)], [(0, 0, 0), (0, 0, 0), (0, 0, 0), (255, 0, 174), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 0, 0)]]

holiday = True   #switch to activate holidays

unicorn.rotation(180)

def brightness_set():
    if 815 <= check_time < 1830:
        unicorn.brightness(0.8)
    else:
        unicorn.brightness(0.4)

def time_checker():
    """
    Checks the current time
    """
    global current_time
    current_time = time.localtime()
    global disp_time
    disp_time = time.strftime("%H%M", current_time)
    #disp_time = "1200"
    global check_time
    check_time = int(disp_time)
    global current_date
    current_date = time.strftime("%m%d", current_time)
    global check_date
    check_date = int(current_date)
    #check_date = 214
    



def day_or_night():
    """
    Changes the LED display to the appropriate picture
    depending on time of day
    """
    unicorn.clear()
    if 0000 <= check_time < 800 or 2000 <= check_time <= 2359:
        unicorn.set_pixels(moon)
    elif holiday == True:      #loop containing holiday options
        if check_date == 211:
            unicorn.set_pixels(birthday)
        elif check_date == 422:
            unicorn.set_pixels(globe)
        elif check_date == 429:
            unicorn.set_pixels(birthday)
        elif check_date == 527:
            unicorn.set_pixels(birthday)
        elif check_date == 317:
            unicorn.set_pixels(st_paddys)
        elif check_date == 1225:
            unicorn.set_pixels(christmas_tree)
        elif check_date == 214:
            unicorn.set_pixels(valentines)
        else:
            unicorn.set_pixels(sun)
    else:
        unicorn.set_pixels(sun)
    unicorn.show()




while True:
    time_checker()
    brightness_set()
    day_or_night()    
    #time.sleep(1)
    #print(check_date)
